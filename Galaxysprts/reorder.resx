<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBw0NDQ0HBw0HBwcHDQ0HBwcHDQ8NDQcNFREWIhURFRUY
        HSggGBoxGxUVITEhJSkrOi46Fx8zODMtNygtLiv/2wBDAQoKCg0NDQ4NDQ4tGRUZKysrLS0tKysrKysr
        KysrLSsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKyv/wAARCACxARwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDxGiiimIKKKKACiilFACilAoApwFMAApQKAKcBQIAKUClApwFM
        QgFLinAUuKYDcUuKfijFMQ3FGKfijFADMUYp+KMUAR4pMVJikxSAjxTSKlIppFAyMimkVIRTSKQEZFIR
        TyKaRSGMNJTyKaaBjaKU0lIAooooAKKKKACiiigAoooFACilFApwFMAFOAoFOAoEAFPAoApwFMQAU4Cg
        CngVQhAKUCnAUoFAhAKXFOApcUwG4oxT8UuKBEeKTFSYoxQMixSEVLimkUARkU0ipSKYRSGRkU0ipSKY
        RSAjIphFSkUwikMjNNIqQimkUhjDTaeaaaQxKKKKACiiigAooooAKUUgpwoAUU4UgpwpiFFPApBThTEO
        ApwFIBTwKYhQKcBQBTwKoQgFPAoApwFMQgFOxSgU4CmIbijFPxRiiwDMUmKkxSYoAjIpCKkIppFIZGRT
        CKlIppFAERFMIqUimEVJRGRTCKlIphFIZERTTUhFMNIYw0008000hjDRSmkpAFFFFABRRRQAopRSCnCg
        Bwpwpop4piHCniminiqEOFPApop4FMQ4CngUgFPAqiRQKcBQBTgKYgApwFKBTgKYhuKXFOxRigBmKTFS
        YpMUARkU0ipSKYRQBGRTCKlIphFIZGRUZFSkUwipKIiKaakNMNIZGajNSmmGpGRmmGpDTDSGMNJTjTTS
        GFFFFABRRRQAopwpBThTAcKeKYKeKYh4p4pop4piHCpFpi1ItUSxwp4pop4piHCngU0VIKokUCnAUgp4
        piExS4pQKXFMBuKQin4pDQBGRTSKkNMNIZGRTDUhphqRkZqM1KajNIZGaYakaozUlDGqM1I1MNIZGaaa
        eaYakYw0hpxpppDEooooAKBRQKAHCnCminCmA4VItRipBTEPFPFMFPFMketSCo1qRaoTJBTxTBTxVCHi
        nimLTxTJHinimCnimIcKWkFLTEIaQ04000AMNNNONNNIYxqjNSNUZpDGNTDTzTGqSiNqYae1MNIaGGoz
        UhqM1JQw0w080w0hjTTTTjTTUjEooooAKBRRQA4U4UwU8UwHCnimCnimIkFPFRinimSSCpFqIVItUJkg
        p4qMVIKYiQU8VEKeDVEkgp4qMGnA0xDwaXNNzRmmA7NITSZpCaAA0w0pNNNIY00w04mmGpGNNMNONMNI
        YxqjNPamGpKGNTDTzTDSGMNMNONNNSMaaaaU0hpDEooooAKKKKAFFOFNFKKAHinimCnCqESCnioxTxTE
        SCpBUQp4NMRKKeDUQNPBqiSUGnA1GDTgaYiUGnA1EDTgaYiTNLmmZozTAfmkJpuaTNIBSaaTSE00mgAJ
        ppNBNNJpDEJqMmnE0wmpKGmmGnGmE0hjTTDTjTDSGNNMNONNNSMaaaacabSGFFFFABRRRQACnCm0ooAe
        KcKYKcKYiQU8VEDTwaYiUGnA1GDTwaoRIDTwaiBpwNMRMDTgaiBpwNMRKDS5qMGlBpiJM0ZpmaM0APzR
        mmZozRcBSaQmkJppNAxSaYTQTTSaQATTCaCaaTUjENMJpSaaTSKGmmGnE0w0hiGmmlNNNIYhpKDRSAKK
        KKACiiigAoFFFADhThTBThTAeKcDTAaUUCJQacDUYNOBqhEoNOBqIGnA0xEoNOBqIGnA0xEoNLmogaXN
        AEuaM1HmjNMRJmkzTM0ZoAcTSE03NNJpDHE00mkJppNIYpNNJpCaaTSACaaTQTTCaQwJppoNITSGIaaa
        U000hhRRRQAUUUUAFFFFABRRRQAUopKBQA8GnA0wUoNMCQGnA1GDSg0xEoNOBqIGnA0CJAadmogacDTA
        kzS5qPNLmmIfmlzUeaXNAD80maZmjNADs0ZpmaQmgBxNITTc0hNIYpNNJpCaaTSAUmmk0E00mkMCaaaK
        SgYUlFFIAooooAKKKKACiiigAooooAKKKKAFFLRRQA4UtFFMQ4UooopgOFLRRQIWloopgFLRRQAlFFFA
        CUUUUANNIaKKQDTSUUUDG0hoopAJTTRRSGFFFFABRRRQAUUUUAf/2Q==
</value>
  </data>
</root>